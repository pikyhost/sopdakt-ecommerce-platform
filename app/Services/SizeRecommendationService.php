<?php

namespace App\Services;

use App\Models\SizeGuide;

class SizeRecommendationService
{
    public function recommend(int $height, int $weight, ?int $age, int $shoulderWidth): string
    {
        // Get all size guides with their sizes, ordered by size priority
        $sizeGuides = SizeGuide::with('size')
            ->whereNotNull('size_id')
            ->get()
            ->sortBy(function ($guide) {
                // Define size order priority
                $sizeOrder = ['S' => 1, 'M' => 2, 'L' => 3, 'XL' => 4, '2XL' => 5, '3XL' => 6];
                return $sizeOrder[$guide->size->name] ?? 999;
            });

        $bestMatch = null;
        $bestScore = 0;

        foreach ($sizeGuides as $sizeGuide) {
            // Check if user fits within this size guide's ranges
            if ($sizeGuide->fitsUser($height, $weight, $age, $shoulderWidth)) {
                // Calculate fit score
                $score = $sizeGuide->calculateFitScore($height, $weight, $age, $shoulderWidth);

                if ($score > $bestScore) {
                    $bestScore = $score;
                    $bestMatch = $sizeGuide;
                }
            }
        }

        // If no perfect fit found, find the closest size
        if (!$bestMatch) {
            foreach ($sizeGuides as $sizeGuide) {
                $score = $sizeGuide->calculateFitScore($height, $weight, $age, $shoulderWidth);

                if ($score > $bestScore) {
                    $bestScore = $score;
                    $bestMatch = $sizeGuide;
                }
            }
        }

        return $bestMatch ? $bestMatch->size->name : '3XL';
    }

    /**
     * Get recommendation with detailed explanation
     */
    public function getDetailedRecommendation(int $height, int $weight, ?int $age, int $shoulderWidth): array
    {
        $recommendedSize = $this->recommend($height, $weight, $age, $shoulderWidth);

        $sizeGuide = SizeGuide::whereHas('size', function($query) use ($recommendedSize) {
            $query->where('name', $recommendedSize);
        })->first();

        $explanation = [];

        if ($sizeGuide) {
            if ($sizeGuide->fitsUser($height, $weight, $age, $shoulderWidth)) {
                $explanation[] = "Perfect fit based on your measurements";
            } else {
                $explanation[] = "Best available fit based on your measurements";
            }

            $fitScore = $sizeGuide->calculateFitScore($height, $weight, $age, $shoulderWidth);
            $explanation[] = "Fit confidence: " . round($fitScore * 100) . "%";
        }

        return [
            'size' => $recommendedSize,
            'explanation' => $explanation,
            'fit_score' => $fitScore ?? 0
        ];
    }
}

/*

# شرح تفصيلي لمنطق نظام توصية الأحجام

## المنطق الأساسي للنظام

### 1. آلية عمل النظام
النظام يعمل بناءً على مقارنة **قياسات المستخدم** مع **نطاقات القياسات المحددة لكل حجم** في قاعدة البيانات:

#### قياسات المستخدم المطلوبة:
- **الطول** (Height): بالسنتيمتر
- **الوزن** (Weight): بالكيلوجرام
- **العمر** (Age): بالسنوات (اختياري)
- **عرض الكتفين** (Shoulder Width): بالسنتيمتر

#### نطاقات القياسات لكل حجم (يتم تحديدها من لوحة التحكم):
- **الحد الأدنى والأقصى للطول**: `min_height` و `max_height`
- **الحد الأدنى والأقصى للوزن**: `min_weight` و `max_weight`
- **الحد الأدنى والأقصى للعمر**: `min_age` و `max_age`
- **الحد الأدنى والأقصى لعرض الكتفين**: `min_shoulder_width` و `max_shoulder_width`

### 2. خطوات المقارنة والمطابقة

#### المرحلة الأولى: التحقق من المطابقة المثالية
```php
public function fitsUser(int $height, int $weight, ?int $age, int $shoulderWidth): bool
```

يتحقق النظام من أن قياسات المستخدم تقع **داخل النطاق المحدد** لكل حجم:
- هل الطول بين الحد الأدنى والأقصى المحدد؟
- هل الوزن بين الحد الأدنى والأقصى المحدد؟
- هل عرض الكتفين بين الحد الأدنى والأقصى المحدد؟
- هل العمر بين الحد الأدنى والأقصى المحدد؟ (إذا تم توفيره)

#### المرحلة الثانية: حساب درجة المطابقة
```php
public function calculateFitScore(int $height, int $weight, ?int $age, int $shoulderWidth): float
```

إذا لم توجد مطابقة مثالية، يحسب النظام **درجة مطابقة** لكل حجم بناءً على:

1. **قرب القياس من الوسط**: كلما كان القياس أقرب لوسط النطاق، كانت النتيجة أفضل
2. **المعادلة المستخدمة**:
   ```
   درجة المطابقة = 1 - (|القياس الفعلي - وسط النطاق| / نطاق القياس)
   ```

3. **مثال توضيحي**:
   - نطاق الطول للحجم M: 160-170 سم
   - وسط النطاق: 165 سم
   - طول المستخدم: 168 سم
   - درجة مطابقة الطول: 1 - (|168 - 165| / 10) = 0.7

### 3. اختيار الحجم الأنسب
النظام يختار الحجم بناءً على:
1. **الأولوية الأولى**: الحجم الذي تقع فيه جميع قياسات المستخدم داخل النطاق المحدد
2. **الأولوية الثانية**: الحجم الذي يحصل على أعلى درجة مطابقة إجمالية

---

## شرح قسم قياسات القطعة الفعلية

### ```Section::make(__('Garment Measurements (cm)'))```

هذا القسم مخصص لتسجيل **القياسات الفعلية للقطعة نفسها** وليس قياسات جسم المستخدم:

#### 1. قياس الصدر/الصدرية (`bust_measurement`)
**الهدف**: تسجيل قياس محيط الصدر الفعلي للقطعة
- **للرجال**: قياس محيط الصدر للقميص/التيشيرت
- **للنساء**: قياس محيط الصدرية/البلوزة
- **طريقة القياس**: وضع شريط القياس حول أوسع جزء من الصدر للقطعة وهي مفرودة
- **الاستخدام**: يساعد في التأكد من أن القطعة ستناسب محيط صدر المستخدم

#### 2. قياس الطول (`length_measurement`)
**الهدف**: تسجيل الطول الفعلي للقطعة من الكتف إلى الحافة السفلية
- **طريقة القياس**: من أعلى الكتف (عند التقاء الكتف بالرقبة) إلى أسفل القطعة
- **الاستخدام**: يساعد في تحديد ما إذا كانت القطعة ستكون بالطول المناسب للمستخدم

### لماذا هذه القياسات مهمة؟

#### 1. **الدقة في التوصية**
- توفر معلومات دقيقة عن الحجم الفعلي للقطعة
- تساعد في مقارنة أفضل بين قياسات المستخدم والقطعة

#### 2. **تحسين تجربة المستخدم**
- تقليل معدل الإرجاع بسبب عدم مناسبة الحجم
- زيادة ثقة المستخدم في الشراء

#### 3. **مرونة في التصميمات المختلفة**
- كل تصميم قد يختلف في القياسات حتى لو كان نفس الحجم
- يمكن تخصيص قياسات مختلفة لكل منتج

### استخدام هذه القياسات في الكود

```php
// في المستقبل يمكن استخدامها لتحسين دقة التوصية
public function checkGarmentFit($userBust, $userHeight) {
    if ($this->bust_measurement && $userBust > $this->bust_measurement) {
        return false; // القطعة ضيقة جداً
    }

    if ($this->length_measurement) {
        $recommendedLength = $userHeight * 0.45; // نسبة مقترحة
        if (abs($this->length_measurement - $recommendedLength) > 5) {
            return 'warning'; // قد لا يناسب الطول
        }
    }

    return true;
}
```

---

## ملخص النظام

### المدخلات
1. **قياسات المستخدم**: الطول، الوزن، العمر، عرض الكتفين
2. **نطاقات الأحجام**: محددة من لوحة التحكم لكل حجم
3. **قياسات القطعة**: الصدر والطول الفعلي للقطعة

### المعالجة
1. **مقارنة النطاقات**: هل المستخدم يقع ضمن نطاق الحجم؟
2. **حساب درجات المطابقة**: كم درجة مطابقة لكل حجم؟
3. **ترتيب النتائج**: أي حجم يحصل على أعلى درجة؟

### المخرجات
1. **الحجم الموصى به**: الحجم الأنسب للمستخدم
2. **درجة الثقة**: نسبة مئوية تدل على مدى دقة التوصية
3. **تفسير النتيجة**: شرح سبب اختيار هذا الحجم
4. **معلومات إضافية**: نطاقات القياسات للحجم المختار

### المميزات
- **مرونة كاملة**: يمكن تعديل النطاقات من لوحة التحكم
- **ذكي**: يستخدم خوارزمية للعثور على أفضل مطابقة
- **شامل**: يأخذ في الاعتبار عدة عوامل (الطول، الوزن، العمر، الكتفين)
- **دقيق**: يوفر قياسات القطعة الفعلية للمقارنة

 */


/*

# ماذا يحدث عندما لا تتطابق قياسات المستخدم مع أي حجم مباشرة؟

## السيناريو: عدم وجود مطابقة مباشرة

### مثال عملي
**قياسات المستخدم:**
- الطول: 185 سم
- الوزن: 65 كجم
- عرض الكتفين: 45 سم
- العمر: 25 سنة

**الأحجام المتاحة في المتجر:**
- **حجم M**: طول 160-170 سم، وزن 60-75 كجم، كتفين 38-42 سم
- **حجم L**: طول 170-180 سم، وزن 75-90 كجم، كتفين 42-46 سم
- **حجم XL**: طول 180-190 سم، وزن 90-110 كجم، كتفين 46-50 سم

**المشكلة:**
- الطول (185) يناسب XL
- الوزن (65) يناسب M
- عرض الكتفين (45) يناسب L

❌ **لا يوجد حجم واحد يناسب جميع القياسات!**

---

## الحل التقني: نظام التسجيل الذكي (Smart Scoring System)

### 1. حساب درجة المطابقة لكل حجم

#### الطريقة التقنية:
```php
public function calculateFitScore($height, $weight, $age, $shoulderWidth): float
{
    $score = 0;
    $factors = 0;

    // حساب درجة الطول
    $heightMid = ($this->min_height + $this->max_height) / 2;
    $heightRange = $this->max_height - $this->min_height;
    $heightScore = 1 - (abs($height - $heightMid) / max($heightRange, 1));

    // حساب درجة الوزن
    $weightMid = ($this->min_weight + $this->max_weight) / 2;
    $weightRange = $this->max_weight - $this->min_weight;
    $weightScore = 1 - (abs($weight - $weightMid) / max($weightRange, 1));

    // حساب درجة عرض الكتفين
    $shoulderMid = ($this->min_shoulder_width + $this->max_shoulder_width) / 2;
    $shoulderRange = $this->max_shoulder_width - $this->min_shoulder_width;
    $shoulderScore = 1 - (abs($shoulderWidth - $shoulderMid) / max($shoulderRange, 1));

    // المتوسط النهائي
    return ($heightScore + $weightScore + $shoulderScore) / 3;
}
```

### 2. التطبيق على المثال العملي

#### حساب درجات المطابقة:

**حجم M (160-170 طول، 60-75 وزن، 38-42 كتفين):**
- وسط الطول: 165 سم
- درجة الطول: 1 - |185 - 165| / 10 = 1 - 20/10 = **-1.0** (خارج النطاق)
- وسط الوزن: 67.5 كجم
- درجة الوزن: 1 - |65 - 67.5| / 15 = 1 - 2.5/15 = **0.83**
- وسط الكتفين: 40 سم
- درجة الكتفين: 1 - |45 - 40| / 4 = 1 - 5/4 = **-0.25** (خارج النطاق)
- **المجموع النهائي**: (-1.0 + 0.83 + (-0.25)) / 3 = **-0.14**

**حجم L (170-180 طول، 75-90 وزن، 42-46 كتفين):**
- وسط الطول: 175 سم
- درجة الطول: 1 - |185 - 175| / 10 = 1 - 10/10 = **0.0** (على الحد)
- وسط الوزن: 82.5 كجم
- درجة الوزن: 1 - |65 - 82.5| / 15 = 1 - 17.5/15 = **-0.17** (خارج النطاق)
- وسط الكتفين: 44 سم
- درجة الكتفين: 1 - |45 - 44| / 4 = 1 - 1/4 = **0.75**
- **المجموع النهائي**: (0.0 + (-0.17) + 0.75) / 3 = **0.19**

**حجم XL (180-190 طول، 90-110 وزن، 46-50 كتفين):**
- وسط الطول: 185 سم
- درجة الطول: 1 - |185 - 185| / 10 = 1 - 0/10 = **1.0** (مطابقة مثالية)
- وسط الوزن: 100 كجم
- درجة الوزن: 1 - |65 - 100| / 20 = 1 - 35/20 = **-0.75** (خارج النطاق بكثير)
- وسط الكتفين: 48 سم
- درجة الكتفين: 1 - |45 - 48| / 4 = 1 - 3/4 = **0.25**
- **المجموع النهائي**: (1.0 + (-0.75) + 0.25) / 3 = **0.17**

### 3. النتيجة النهائية

**ترتيب الأحجام حسب درجة المطابقة:**
1. **حجم L**: 0.19 (الأفضل)
2. **حجم XL**: 0.17
3. **حجم M**: -0.14 (الأسوأ)

** النظام سيوصي بـ حجم L**

---

## الشرح البسيط لآلية العمل

### 1. **عندما لا يوجد حجم مثالي**
النظام يقول: "لا يوجد حجم يناسب جميع قياساتك بشكل مثالي، لكن دعني أجد الأقرب"

### 2. **طريقة المقارنة**
- يحسب النظام "درجة" لكل حجم
- الدرجة الأعلى = الحجم الأنسب
- يعتمد على مبدأ "أقل الأضرار"

### 3. **العوامل المؤثرة**
النظام يعطي أولوية أكبر للقياسات التي:
- أقرب للوسط المحدد
- لا تتجاوز الحدود بكثير
- تحقق راحة أكبر في الاستخدام

### 4. **المنطق العملي**
- **حجم أكبر**: أفضل من حجم أصغر (يمكن تعديله)
- **مطابقة جزئية**: أفضل من عدم مطابقة تماماً
- **التوازن**: يوازن بين جميع القياسات

---

## ما يراه المستخدم في النتيجة

### رسالة النظام:
```json
{
    "recommended_size": "L",
    "fit_score": 60,
    "explanation": [
        "أفضل مطابقة متاحة بناءً على قياساتك",
        "درجة الثقة: 60%"
    ],
    "message": "الحجم الموصى به: L",
    "size_guide": {
        "height_range": "170 - 180 cm",
        "weight_range": "75 - 90 kg",
        "shoulder_range": "42 - 46 cm"
    }
}
```

### تفسير النتيجة للمستخدم:
- **"الحجم L هو الأنسب لك"**
- **"درجة الثقة 60%"** - يعني أن المطابقة جيدة وليست مثالية
- **"قياساتك تقع جزئياً ضمن هذا الحجم"**
- **"قد تحتاج لتجربة القطعة أو استشارة خدمة العملاء"**

---

## الحالات الاستثنائية

### 1. **المستخدم أكبر من جميع الأحجام**
```php
// مثال: طول 200 سم، وزن 150 كجم
if (!$bestMatch) {
    return '3XL'; // أكبر حجم متاح
}
```
**الرسالة**: "تم اختيار أكبر حجم متاح، قد تحتاج لقياسات خاصة"

### 2. **المستخدم أصغر من جميع الأحجام**
```php
// مثال: طول 140 سم، وزن 40 كجم
if (!$bestMatch) {
    return 'S'; // أصغر حجم متاح
}
```
**الرسالة**: "تم اختيار أصغر حجم متاح، قد يحتاج لتعديل"

### 3. **قياسات متضاربة جداً**
```php
// مثال: طول 200 سم، وزن 50 كجم (نحيف جداً وطويل جداً)
```
**الرسالة**: "قياساتك تحتاج لاستشارة خاصة، يرجى التواصل مع خدمة العملاء"

---

## الملخص التقني

### المشكلة:
قياسات المستخدم لا تتطابق مع أي حجم بشكل مثالي

### الحل:
1. **حساب درجة مطابقة** لكل حجم متاح
2. **اختيار الحجم** الذي يحصل على أعلى درجة
3. **توضيح مستوى الثقة** في التوصية
4. **تقديم معلومات إضافية** لمساعدة المستخدم

### المميزات:
-  **لا يترك المستخدم بدون توصية**
-  **يوضح مستوى دقة التوصية**
-  **يعطي معلومات تساعد في اتخاذ القرار**
-  **يتعامل مع جميع الحالات الاستثنائية**

### النتيجة:
**نظام ذكي يجد دائماً أفضل حل متاح، حتى لو لم يكن مثالياً**
*/
