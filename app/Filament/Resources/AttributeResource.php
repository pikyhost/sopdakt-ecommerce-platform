<?php

namespace App\Filament\Resources;

use App\Filament\Resources\AttributeResource\Pages;
use App\Models\Attribute;
use Filament\Forms\Components\Section;
use Filament\Forms\Form;
use Filament\Resources\Concerns\Translatable;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\KeyValue;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Toggle;
use Filament\Forms\Components\Textarea;
use Filament\Tables\Columns\TextColumn;

class AttributeResource extends Resource
{
    use Translatable;

    protected static ?string $model = Attribute::class;

    protected static ?string $navigationIcon = 'heroicon-o-table-cells';

    public static function getNavigationLabel(): string
    {
        return __('attributes.label'); // TODO: Change the autogenerated stub
    }

    public static function getNavigationGroup(): ?string
    {
        return __('Products Management'); //Products Attributes Management
    }

    public static function getModelLabel(): string
    {
        return __('attributes.label'); // TODO: Change the autogenerated stub
    }

    /**
     * @return string|null
     */
    public static function getPluralLabel(): ?string
    {
        return __('attributes.label'); // TODO: Change the autogenerated stub
    }

    public static function getLabel(): ?string
    {
        return __('attributes.label'); // TODO: Change the autogenerated stub
    }

    public static function getPluralModelLabel(): string
    {
        return __('attributes.label');
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Section::make()->schema([
                    TextInput::make('name')
                        ->columnSpanFull()
                        ->label(__('Attribute Name'))
                        ->required(),

                    Textarea::make('description')
                        ->columnSpanFull()
                        ->label(__('Description'))
                        ->nullable(),

                    Select::make('type')
                        ->columnSpanFull()
                        ->label(__('attributes.type'))
                        ->options([
                            'boolean' => __('attributes.type.boolean'),
                            'select' => __('attributes.type.select'),
                            'text' => __('attributes.type.text'),
                        ])
                        ->live()
                        ->required(),


                    Toggle::make('default_value')
                        ->columnSpanFull()
                        ->label(__('Default Value (for Boolean)'))
                        ->visible(fn ($get) => $get('type') === 'boolean'),

                    KeyValue::make('values')
                        ->columnSpanFull()
                        ->label(__('Attribute Values (for Select type)'))
                        ->visible(fn ($get) => $get('type') === 'select')
                        ->addActionLabel(__('Add Option')),

                    TextInput::make('default_value')
                        ->columnSpanFull()
                        ->label(__('Default Value (for Text)'))
                        ->visible(fn ($get) => $get('type') === 'text'),
                ])
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                TextColumn::make('name')
                    ->label(__('Attribute Name'))
                    ->searchable()
                    ->sortable(),

                TextColumn::make('type')
                    ->label(__('Attribute Type'))
                    ->sortable(),

                TextColumn::make('description')
                    ->label(__('Description'))
                    ->limit(50)
                    ->searchable(),

                TextColumn::make('created_at')
                    ->label(__('Created At'))
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListAttributes::route('/'),
            'create' => Pages\CreateAttribute::route('/create'),
            'edit' => Pages\EditAttribute::route('/{record}/edit'),
        ];
    }
}
