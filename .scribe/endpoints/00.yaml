name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      second_phone:
        name: second_phone
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      preferred_language:
        name: preferred_language
        description: 'Must not be greater than 5 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar_url:
        name: avatar_url
        description: 'Must be a valid URL.'
        required: false
        example: 'http://crooks.biz/et-fugiat-sunt-nihil-accusantium'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      country_id:
        name: country_id
        description: 'The <code>id</code> of an existing record in the countries table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      governorate_id:
        name: governorate_id
        description: 'The <code>id</code> of an existing record in the governorates table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city_id:
        name: city_id
        description: 'The <code>id</code> of an existing record in the cities table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      email: zbailey@example.net
      password: architecto
      phone: architecto
      second_phone: architecto
      preferred_language: 'n'
      avatar_url: 'http://crooks.biz/et-fugiat-sunt-nihil-accusantium'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming password reset link request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming new password request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      token: architecto
      email: zbailey@example.net
      password: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/verify-email/{id}/{hash}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Mark the authenticated user's email address as verified."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      hash: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"status":"error","message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/email/verification-notification
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"status":"error","message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/jt-express-webhook
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bosta/webhook
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/aramex/webhook
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Webhook for ARAMEX to update shipment status'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/aramex/orders/{order_id}/create-shipment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create ARAMEX shipment for an order'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order_id:
        name: order_id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      order_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/aramex/orders/{order_id}/track-shipment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Track ARAMEX shipment'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order_id:
        name: order_id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      order_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to track ARAMEX shipment: No ARAMEX shipment ID found for this order"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/payment/process
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
      - POST
    uri: api/payment/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 302
        content: |-
          <!DOCTYPE html>
          <html>
              <head>
                  <meta charset="UTF-8" />
                  <meta http-equiv="refresh" content="0;url='https://backend.sopdakt.com/api/cart'" />

                  <title>Redirecting to https://backend.sopdakt.com/api/cart</title>
              </head>
              <body>
                  Redirecting to <a href="https://backend.sopdakt.com/api/cart">https://backend.sopdakt.com/api/cart</a>.
              </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          location: 'https://backend.sopdakt.com/api/cart'
          content-type: 'text/html; charset=utf-8'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"categories":[{"id":10,"name":"OVER OVER SIZE","slug":"overoversize","description":"","image_url":"https:\/\/backend.sopdakt.com\/storage\/45\/01JVHZ9KJPRZSXJZQ1TP3Q0Y6T.jpeg","products_count":3,"url":"https:\/\/backend.sopdakt.com\/api\/categories\/overoversize"},{"id":7,"name":"OVER SIZE","slug":"t-shirt","description":"","image_url":"https:\/\/backend.sopdakt.com\/storage\/35\/01JV4JP79353H3NEE1WRNGPZ65.jpeg","products_count":7,"url":"https:\/\/backend.sopdakt.com\/api\/categories\/t-shirt"}],"pagination":{"current_page":1,"last_page":1,"per_page":10,"total":2}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products/realBestSellers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the real top 10 best-selling products based on the total quantity sold.'
      description: |-
        This method retrieves products that have been ordered at least once,
        calculates the total quantity sold (`total_sold`) via the `orderItems` relationship,
        and returns the top 10 products sorted by the highest sales.

        Each product includes:
        - Basic info: id, name (translated), price, discounted price, sales count, slug, image URL
        - Category (with name and slug)
        - Available color variants with:
            - Color name, code, and image
            - Sizes available for that color with quantity > 0
        - Action URLs:
            - Add to cart
            - Toggle wishlist
            - Compare
            - View product details

        Translation is handled automatically via Spatie Laravel Translatable package.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Best selling products retrieved successfully.","products":[{"id":10,"name":"t-shirt","price":0,"after_discount_price":null,"sales":0,"slug":"shirt","media":{"feature_product_image":"https:\/\/backend.sopdakt.com\/storage\/36\/01JV4QFG903F5PEQWC433MW7BD.jpeg","second_feature_product_image":"https:\/\/backend.sopdakt.com\/storage\/37\/01JV4QFGADN01XVRZGXTS738DR.jpeg"},"category":{"name":"OVER SIZE","slug":"t-shirt"},"colors_with_sizes":[{"color_id":3,"color_name":"Green","color_code":"#008000","color_image":"https:\/\/backend.sopdakt.com\/storage\/01JV4QFG09C4045QMQ268EN7X1.jpeg","sizes":[{"size_id":2,"size_name":"S","quantity":95},{"size_id":3,"size_name":"M","quantity":83},{"size_id":5,"size_name":"XL","quantity":100}]},{"color_id":5,"color_name":"Black","color_code":"#000000","color_image":"https:\/\/backend.sopdakt.com\/storage\/01JV4QFG0EMA5BC5H9NN6N8HD6.jpeg","sizes":[{"size_id":4,"size_name":"L","quantity":93},{"size_id":5,"size_name":"XL","quantity":89}]},{"color_id":2,"color_name":"Blue","color_code":"#0000FF","color_image":"https:\/\/backend.sopdakt.com\/storage\/01JV4QFG0HVGCE6K0QCR6CVT82.jpeg","sizes":[{"size_id":3,"size_name":"M","quantity":100},{"size_id":5,"size_name":"XL","quantity":98}]},{"color_id":6,"color_name":"White","color_code":"#FFFFFF","color_image":"https:\/\/backend.sopdakt.com\/storage\/01JV4QFG0NGWA743R9Z19W1DED.jpeg","sizes":[{"size_id":3,"size_name":"M","quantity":99},{"size_id":5,"size_name":"XL","quantity":100}]}],"actions":{"add_to_cart":"https:\/\/backend.sopdakt.com\/api\/cart","toggle_love":"https:\/\/backend.sopdakt.com\/api\/wishlist\/toggle","compare":"https:\/\/backend.sopdakt.com\/api\/compare","view":"https:\/\/backend.sopdakt.com\/api\/products\/shirt"}},{"id":14,"name":"tshirt 3","price":1000,"after_discount_price":800,"sales":19658214,"slug":"overoversize","media":{"feature_product_image":"https:\/\/backend.sopdakt.com\/storage\/50\/01JVM0FNQEV7N6XB36FGQ64F4F.jpeg","second_feature_product_image":"https:\/\/backend.sopdakt.com\/storage\/51\/01JVM0FNS1MKXCQ28CA781TZT2.jpeg"},"category":{"name":"OVER OVER SIZE","slug":"overoversize"},"colors_with_sizes":[{"color_id":5,"color_name":"Black","color_code":"#000000","color_image":"https:\/\/backend.sopdakt.com\/storage\/01JVM0FNGX1A6P5RWW6MM63MXJ.jpeg","sizes":[{"size_id":4,"size_name":"L","quantity":100},{"size_id":5,"size_name":"XL","quantity":98},{"size_id":7,"size_name":" 3XL","quantity":100},{"size_id":9,"size_name":"4xl","quantity":100}]},{"color_id":6,"color_name":"White","color_code":"#FFFFFF","color_image":"https:\/\/backend.sopdakt.com\/storage\/01JVM0FNH2VJC6KZQQ79NPS989.jpeg","sizes":[{"size_id":4,"size_name":"L","quantity":100},{"size_id":3,"size_name":"M","quantity":98},{"size_id":5,"size_name":"XL","quantity":100}]}],"actions":{"add_to_cart":"https:\/\/backend.sopdakt.com\/api\/cart","toggle_love":"https:\/\/backend.sopdakt.com\/api\/wishlist\/toggle","compare":"https:\/\/backend.sopdakt.com\/api\/compare","view":"https:\/\/backend.sopdakt.com\/api\/products\/overoversize"}}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/homepage/slider
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get homepage slider and CTA content.'
      description: |-
        This endpoint returns the main slider, second slider, center section,
        last sections, and latest section based on the current app locale
        (either English or Arabic).
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      locale:
        name: locale
        description: "Optional. Language code ('en' or 'ar')."
        required: false
        example: sr_BA
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      locale: sr_BA
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "main_slider": {
                "image_url": "string",
                "thumbnail_url": "string",
                "heading": "string",
                "discount_text": "string",
                "discount_value": "string",
                "starting_price": "string",
                "currency_symbol": "string",
                "button_text": "string",
                "button_url": "string"
              },
              "second_slider": {
                "image_url": "string",
                "thumbnail_url": "string"
              },
              "center_section": {
                "image_url": "string",
                "heading": "string",
                "button_text": "string",
                "button_url": "string"
              },
              "last_sections": [
                {
                  "image_url": "string",
                  "heading": "string",
                  "subheading": "string",
                  "button_text": "string",
                  "button_url": "string"
                },
                ...
              ],
              "latest_section": {
                "image_url": "string",
                "heading": "string",
                "button_text": "string",
                "button_url": "string"
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/wishlist/toggle
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: 'The <code>id</code> of an existing record in the products table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      product_id: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/wishlist
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"status":"error","message":"Session store not set on request."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all orders for the authenticated user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"status":"error","message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/orders/track/{tracking_number}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Track a specific order by its tracking number.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tracking_number:
        name: tracking_number
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tracking_number: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"status":"error","message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/orders/{order_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the order (only if it belongs to the authenticated user).'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order_id:
        name: order_id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      order_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      notes:
        name: notes
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: shipping
        type: string
        enumValues:
          - pending
          - preparing
          - shipping
          - delayed
          - refund
          - cancelled
          - completed
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      notes: architecto
      status: shipping
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/orders/{order_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the order (only if it belongs to the authenticated user).'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order_id:
        name: order_id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      order_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/discounts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of active discounts with filtering, sorting, and search.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Must match the regex /^[a-zA-Z]{2}(-[a-zA-Z]{2})?$/.'
        required: false
        example: iy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      discount_type:
        name: discount_type
        description: ''
        required: false
        example: free_shipping
        type: string
        enumValues:
          - percentage
          - fixed
          - free_shipping
        exampleWasSpecified: false
        nullable: false
        custom: []
      applies_to:
        name: applies_to
        description: ''
        required: false
        example: product
        type: string
        enumValues:
          - product
          - category
          - cart
          - collection
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: ends_at
        type: string
        enumValues:
          - created_at
          - starts_at
          - ends_at
          - value
          - price
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 40
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: iy
      search: v
      discount_type: free_shipping
      applies_to: product
      sort: ends_at
      direction: desc
      per_page: 1
      page: 40
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"meta":{"current_page":40,"last_page":1,"per_page":1,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/newsletter/subscribe
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new newsletter subscriber.'
      description: |-
        This endpoint allows users to subscribe to the newsletter by providing their email address.
        The email is validated for format and uniqueness, and the client's IP address is recorded.
        A verification email is sent to the provided email address. The subscription is not active
        until the email is verified. Returns a success message or an error for invalid inputs
        or duplicate emails.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Subscription request received. Please check your email to verify."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: |-
          {
              "error": "Email already subscribed."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "error": "Invalid input",
              "details": {
                  "email": [
                      "The email field is required.",
                      "The email must be a valid email address."
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Failed to process subscription. Please try again later."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/recommended-products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a list of recommended products.'
      description: |-
        This endpoint fetches up to 4 randomly selected active (published) products as recommendations.
        It includes detailed information such as categories, variants (colors and sizes), ratings, and
        media URLs. The response is localized based on the current application locale (e.g., 'en', 'fr').
        This endpoint is ideal for frontend use cases like displaying a "Recommended Products" section
        on a homepage or product page in an e-commerce application.

        ### Request Details
        - **Method**: GET
        - **URL**: `/api/products/recommended`
        - **Query Parameters**: None
        - **Headers**:
          - `Accept: application/json`
          - `X-Locale: <locale>` (optional, defaults to app locale, e.g., 'en')

        ### Response Structure
        The response contains a `recommended_products` key with an array of up to 4 product objects.
        Each product includes:
        - **id**: The product's unique identifier (integer).
        - **category_id**: The ID of the product's category (integer).
        - **category_name**: The localized name of the category (string, nullable).
        - **name**: The localized name of the product (string).
        - **price**: The original price of the product (float).
        - **after_discount_price**: The discounted price, if applicable (float, nullable).
        - **description**: The localized description of the product (string).
        - **slug**: The URL-friendly slug for the product (string).
        - **views**: Number of views for the product (integer).
        - **sales**: Number of sales for the product (integer).
        - **fake_average_rating**: A manually set average rating for display (float, nullable).
        - **label_id**: The ID of the product's label, if any (integer, nullable).
        - **summary**: The localized summary of the product (string).
        - **quantity**: Total available quantity of the product (integer).
        - **created_at**: Timestamp when the product was created (ISO 8601 string).
        - **updated_at**: Timestamp when the product was last updated (ISO 8601 string).
        - **media**: Object containing product images.
          - **feature_product_image**: URL of the primary feature image (string, nullable).
          - **second_feature_product_image**: URL of the secondary feature image (string, nullable).
        - **variants**: Array of product variants (colors and sizes).
          - **id**: Variant ID (integer).
          - **color_id**: Color ID (integer).
          - **color_name**: Name of the color (string, nullable).
          - **image_url**: URL of the variant image (string).
          - **sizes**: Array of size options for the variant.
            - **id**: Product color size ID (integer).
            - **size_id**: Size ID (integer).
            - **size_name**: Name of the size (string, nullable).
            - **quantity**: Available quantity for this size (integer).
        - **real_average_rating**: Computed average rating from user ratings, rounded to 1 decimal (float).
        - **actions**: Array of available actions for the product (implementation-specific, e.g., URLs or methods).

        ### Notes for Frontend Developers
        - **Randomization**: Products are returned in random order using `inRandomOrder()`. The selection may
          vary with each request, and fewer than 4 products may be returned if there are not enough active products.
        - **Limit**: The response is limited to 4 products. Ensure your frontend UI can handle fewer items (0-4).
        - **Locale Handling**: The `name`, `category_name`, `description`, and `summary` fields are localized based
          on the current app locale. Use the `X-Locale` header to override the default locale if needed.
        - **Nullable Fields**: Fields like `category_name`, `color_name`, `size_name`, `after_discount_price`,
          `feature_product_image`, and `second_feature_product_image` may be `null`. Provide fallback values
          (e.g., "N/A" or a default image).
        - **Image URLs**: The `image_url` in `variants` and media URLs are absolute URLs using the `storage`
          directory. Ensure `/storage/` is accessible (run `php artisan storage:link` on the server).
        - **Ratings**: `real_average_rating` is computed from user ratings, while `fake_average_rating` is a preset
          value. Prefer `real_average_rating` for authenticity, or use `fake_average_rating` for display if set.
        - **Actions**: The `actions` field is implementation-specific and may contain URLs or methods for actions
          like "add to cart" or "view details". Parse this field based on your frontend requirements.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "recommended_products": [
                  {
                      "id": 3,
                      "category_id": 1,
                      "category_name": "Electronics",
                      "name": "Wireless Headphones",
                      "price": 99.99,
                      "after_discount_price": 79.99,
                      "description": "High-quality wireless headphones with noise cancellation.",
                      "slug": "wireless-headphones",
                      "views": 200,
                      "sales": 50,
                      "fake_average_rating": 4.8,
                      "label_id": 2,
                      "summary": "Immersive sound with long battery life.",
                      "quantity": 80,
                      "created_at": "2025-05-04T12:00:00Z",
                      "updated_at": "2025-05-04T12:00:00Z",
                      "media": {
                          "feature_product_image": "https://yourapp.com/storage/images/headphones.jpg",
                          "second_feature_product_image": "https://yourapp.com/storage/images/headphones-side.jpg"
                      },
                      "variants": [
                          {
                              "id": 5,
                              "color_id": 2,
                              "color_name": "Black",
                              "image_url": "https://yourapp.com/storage/variants/headphones-black.jpg",
                              "sizes": [
                                  {
                                      "id": 7,
                                      "size_id": 1,
                                      "size_name": "One Size",
                                      "quantity": 80
                                  }
                              ]
                          }
                      ],
                      "real_average_rating": 4.5,
                      "actions": {
                          "view": "https://yourapp.com/api/products/3",
                          "add_to_cart": "https://yourapp.com/api/cart/add/3"
                      }
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "recommended_products": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Failed to retrieve recommended products. Please try again later."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/blogs
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of active blogs.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'Number of blogs per page. Default: 10'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number. Default: 1'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 16
      page: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "data": [
                      {
                          "id": 1,
                          "title": "Blog Title",
                          "slug": "blog-slug",
                          "excerpt": "Blog excerpt...",
                          "published_at": "2023-01-01",
                          "category": {
                              "id": 1,
                              "name": "Category Name"
                          },
                          "author": {
                              "id": 1,
                              "name": "Author Name"
                          },
                          "image_url": "http://example.com/image.jpg",
                          "likes_count": 10,
                          "tags": [
                              {"id": 1, "name": "Tag Name"},
                              ...
                          ]
                      },
                      ...
                  ],
                  "current_page": 1,
                  "last_page": 5,
                  ...
              },
              "message": "Blogs retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/blogs/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all active blog categories with their active blogs count.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "name": "Category Name",
                      "slug": "category-slug",
                      "blogs_count": 5
                  },
                  ...
              ],
              "message": "Blog categories retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/blogs/popular
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve popular blogs based on likes count.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      limit:
        name: limit
        description: 'Number of blogs to return. Default: 5'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      limit: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "title": "Blog Title",
                      "slug": "blog-slug",
                      "excerpt": "Blog excerpt...",
                      "published_at": "2023-01-01",
                      "image_url": "http://example.com/image.jpg",
                      "likes_count": 10
                  },
                  ...
              ],
              "message": "Popular blogs retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/blogs/recent
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve recent blogs based on publication date.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      limit:
        name: limit
        description: 'Number of blogs to return. Default: 5'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      limit: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "title": "Blog Title",
                      "slug": "blog-slug",
                      "excerpt": "Blog excerpt...",
                      "published_at": "2023-01-01",
                      "image_url": "http://example.com/image.jpg"
                  },
                  ...
              ],
              "message": "Recent blogs retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/blogs/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search blogs by title or content.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      query:
        name: query
        description: 'Search term'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of blogs per page. Default: 10'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number. Default: 1'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      query: architecto
      per_page: 16
      page: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "data": [
                      {
                          "id": 1,
                          "title": "Blog Title",
                          "slug": "blog-slug",
                          "excerpt": "Blog excerpt...",
                          "published_at": "2023-01-01",
                          "author": {
                              "id": 1,
                              "name": "Author Name"
                          },
                          "category": {
                              "id": 1,
                              "name": "Category Name"
                          },
                          "image_url": "http://example.com/image.jpg",
                          "likes_count": 10
                      },
                      ...
                  ],
                  "search_query": "search term",
                  "current_page": 1,
                  "last_page": 5,
                  ...
              },
              "message": "Search results retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "success": false,
              "message": "Search query is required"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/blogs/category/{categorySlug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve paginated blogs by category slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      categorySlug:
        name: categorySlug
        description: ''
        required: true
        example: t-shirt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      categorySlug: t-shirt
    queryParameters:
      per_page:
        name: per_page
        description: 'Number of blogs per page. Default: 10'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number. Default: 1'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 16
      page: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "data": [
                      {
                          "id": 1,
                          "title": "Blog Title",
                          "slug": "blog-slug",
                          "excerpt": "Blog excerpt...",
                          "published_at": "2023-01-01",
                          "author": {
                              "id": 1,
                              "name": "Author Name"
                          },
                          "image_url": "http://example.com/image.jpg",
                          "likes_count": 10,
                          "tags": [
                              {"id": 1, "name": "Tag Name"},
                              ...
                          ]
                      },
                      ...
                  ],
                  "category": {
                      "id": 1,
                      "name": "Category Name",
                      "slug": "category-slug"
                  },
                  "current_page": 1,
                  "last_page": 5,
                  ...
              },
              "message": "Blogs by category retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Category not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/blogs/tag/{tagId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve paginated blogs by tag ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tagId:
        name: tagId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tagId: architecto
    queryParameters:
      per_page:
        name: per_page
        description: 'Number of blogs per page. Default: 10'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number. Default: 1'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 16
      page: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "data": [
                      {
                          "id": 1,
                          "title": "Blog Title",
                          "slug": "blog-slug",
                          "excerpt": "Blog excerpt...",
                          "published_at": "2023-01-01",
                          "author": {
                              "id": 1,
                              "name": "Author Name"
                          },
                          "category": {
                              "id": 1,
                              "name": "Category Name"
                          },
                          "image_url": "http://example.com/image.jpg",
                          "likes_count": 10
                      },
                      ...
                  ],
                  "tag": {
                      "id": 1,
                      "name": "Tag Name"
                  },
                  "current_page": 1,
                  "last_page": 5,
                  ...
              },
              "message": "Blogs by tag retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Tag not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/blogs/{slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a single blog post by its slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the blog.'
        required: true
        example: english222
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: english222
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "title": "Blog Title",
                  "slug": "blog-slug",
                  "content": "Blog content...",
                  "excerpt": "Blog excerpt...",
                  "published_at": "2023-01-01",
                  "category": {
                      "id": 1,
                      "name": "Category Name",
                      "slug": "category-slug"
                  },
                  "author": {
                      "id": 1,
                      "name": "Author Name",
                      "avatar": "http://example.com/storage/avatar.jpg"
                  },
                  "image_url": "http://example.com/image.jpg",
                  "likes_count": 10,
                  "is_liked": false,
                  "tags": [
                      {"id": 1, "name": "Tag Name"},
                      ...
                  ],
                  "related_blogs": [
                      {
                          "id": 2,
                          "title": "Related Blog Title",
                          "slug": "related-blog-slug",
                          "excerpt": "Related blog excerpt...",
                          "published_at": "2023-01-02",
                          "image_url": "http://example.com/related-image.jpg"
                      },
                      ...
                  ]
              },
              "message": "Blog retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Blog not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/blogs/{blogId}/like'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Toggle like status for a blog post.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      blogId:
        name: blogId
        description: ''
        required: true
        example: english222
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      blogId: english222
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "likes_count": 11,
                  "is_liked": true
              },
              "message": "Blog liked successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "likes_count": 10,
                  "is_liked": false
              },
              "message": "Blog unliked successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Blog not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/global-search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Global Search API'
      description: 'Search across products, categories, blogs, discounts, and tags.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      query:
        name: query
        description: 'The search term (min: 2, max: 255 characters).'
        required: true
        example: phone
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      query: phone
    bodyParameters:
      query:
        name: query
        description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      query: b
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "products": [
                      {
                          "id": 1,
                          "name": "Product Name",
                          "summary": "Product Summary",
                          "labels": ["label1", "label2"]
                      },
                      ...
                  ],
                  "categories": [
                      {
                          "id": 1,
                          "name": "Category Name"
                      },
                      ...
                  ],
                  "blogs": [
                      {
                          "id": 1,
                          "title": "Blog Title",
                          "slug": "blog-slug",
                          "published_at": "2025-05-07T00:00:00Z"
                      },
                      ...
                  ],
                  "discounts": [
                      {
                          "id": 1,
                          "name": "Discount Name",
                          "description": "Discount Description",
                          "discount_type": "percentage",
                          "value": 10.00
                      },
                      ...
                  ],
                  "tags": [
                      {
                          "id": 1,
                          "name_ar": "تاغ",
                          "name_en": "Tag"
                      },
                      ...
                  ]
              },
              "meta": {
                  "timestamp": "2025-05-07T12:34:56Z",
                  "query": "search term"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "The query field must be at least 2 characters.",
              "errors": {
                  "query": ["The query field must be at least 2 characters."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/top-bars
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":true,"data":[{"content":"Profile Settings\nProfile Settings\nProfile Settings\nProfile Settings\nProfile Settings\nProfile Settings"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/footer/contact-info
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"address":"I am at Egypt now","phone":"+201111111111","email":"info@pikyhost.com","social_media":{"facebook":"https:\/\/www.facebook.com\/share\/1JDi1HsuvB\/","youtube":"https:\/\/www.facebook.com\/share\/1JDi1HsuvB\/","instagram":"https:\/\/www.facebook.com\/share\/1JDi1HsuvB\/","x":"https:\/\/www.facebook.com\/share\/1JDi1HsuvB\/","snapchat":"https:\/\/www.facebook.com\/share\/1JDi1HsuvB\/","tiktok":"https:\/\/www.facebook.com\/share\/1JDi1HsuvB\/"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/service-features
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":6,"title":"Customer Support","subtitle":"Need Assistance?","image_url":"https:\/\/backend.sopdakt.com\/storage\/support-icon.svg"},{"id":7,"title":"Secured Payment","subtitle":"Safe & Fast","image_url":"https:\/\/backend.sopdakt.com\/storage\/payment-icon.svg"},{"id":8,"title":"Free Returns","subtitle":"Easy & Free","image_url":"https:\/\/backend.sopdakt.com\/storage\/returns-icon.svg"},{"id":9,"title":"Free Shipping","subtitle":"Made To Help You","image_url":"https:\/\/backend.sopdakt.com\/storage\/01JVN77B5Y0ZJEBZDYA95ZCHK7.JPG"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{product_slug}/ratings'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_slug:
        name: product_slug
        description: 'The slug of the product.'
        required: true
        example: shirt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_slug: shirt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"current_page":1,"data":[{"id":2,"product_id":10,"user_id":21,"rating":4,"comment":"this is rating","status":"approved","created_at":"2025-05-20T08:27:02.000000Z","updated_at":"2025-05-20T08:27:02.000000Z"}],"first_page_url":"https:\/\/backend.sopdakt.com\/api\/products\/shirt\/ratings?page=1","from":1,"last_page":1,"last_page_url":"https:\/\/backend.sopdakt.com\/api\/products\/shirt\/ratings?page=1","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/backend.sopdakt.com\/api\/products\/shirt\/ratings?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"https:\/\/backend.sopdakt.com\/api\/products\/shirt\/ratings","per_page":5,"prev_page_url":null,"to":1,"total":1}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/products/{product_slug}/ratings'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_slug:
        name: product_slug
        description: 'The slug of the product.'
        required: true
        example: shirt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_slug: shirt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rating:
        name: rating
        description: 'Must be at least 1. Must not be greater than 5.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      comment:
        name: comment
        description: 'Must be at least 1 character.'
        required: true
        example: ngzmiyvdljnikhwa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      rating: 1
      comment: ngzmiyvdljnikhwa
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/products/{product_slug}/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_slug:
        name: product_slug
        description: 'The slug of the product.'
        required: true
        example: shirt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_slug: shirt
      rating_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rating:
        name: rating
        description: 'Must be at least 1. Must not be greater than 5.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      comment:
        name: comment
        description: 'Must be at least 1 character.'
        required: true
        example: ngzmiyvdljnikhwa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      rating: 1
      comment: ngzmiyvdljnikhwa
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{product_slug}/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_slug:
        name: product_slug
        description: 'The slug of the product.'
        required: true
        example: shirt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_slug: shirt
      rating_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
